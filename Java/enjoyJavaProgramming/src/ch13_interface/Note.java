package ch13_interface;

public class Note
{
	/*
	 * 인터페이스는 기능 정의
	 * 기능은 메소드
	 * 메소드는 클래스에 포함돼 있어야 한다.
	 * 인터페이스라는 것도 메소드를 가질 수 있다.
	 * 클래스의 메소드는 구현돼 있다
	 * 인터페이스의 메소드는 선언돼 있다.
	 * 
	 * 인터페이스를 왜 선언?
	 * 구현보다는 어떤 기능이 필요할까? 라는 것이 먼저 고민돼야 한다
	 * 기능선언이 구현보다 먼저다
	 * 
	 * 기능에 대한 정의 : 인터페이스 -> class 구현
	 * 
	 * 무엇인가 만들고 싶은 프로그램이 있어야지만 인터페이스를 선언
	 *
	 *내가 만들고 싶은 프로그램을 그림을 표현 : 페이퍼프로토타이핑
	 *화장실찾기앱.
	 *interface 화상실서비스
	 *{
	 *	화장실 목록()
	 *  화장실 점수()
	 *  화장실 정보()
	 *}
	 *
	 *interface 회원서비스(){
	 *	회원가입()
	 *	회원수정()
	 *	회원탈퇴()
	 *}
	 *
	 *회원과 관련된 것들은 회원서비스라는 인터페이스를 가지도록 한다.
	 *응집도 : 관련된 것을 잘 모아서 가지고 있어야 한다.
	 *
	 *화면(UI) User Interface : 웹이면 HTML, CSS
	 *기능(BI) business Interface : 자바의 인터페이스
	 *외부기능(SI) System Interface : 구글api 등 외부기능 요청
	 *
	 *
	 *인터페이스가 있으면 되도록 인터페이스 타입을 이용하여
	 *클래스를 이용하도록 한다.
	 *
	 *TV를 사용할 때도 내부적인 구현을 몰라도 된다.
	 *Tv의 겉에 드러난 인터페이스만 사용하면 된다.
	 *
	 *인터페이스      구현 클래스
	 *Tv tv = new 브라운관TV();
	 *Tv tv = new LCDTV();
	 *브라운관이든 LCD이든 인터페이스는 같다.
	 *tv.on();
	 *tv.이용하는메소드();
	 *tv.off();
	 *
	 *겉모습이 같거나 비슷하면 구현이 달라지더라도 쉽게 사용할 수 있다.
	 *
	 *Collection 프레임워크 (자료구조)
	 *Collection, List, Set, Map 인터페이스르 정의
	 *인터페이스를 구현하도록 함
	 *
	 *
	 */
}
